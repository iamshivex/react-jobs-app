State Management
  We have component level state and app level state
  We use state by importing the {useState} hook from react

  Then we define the state and name it thus:

  const[doThis, setDoThis] = useState(false)

  What this does is to define the state, name it and the function that We'd use to activate it. Also, a default state is set

  When adding a piece of state to an input, an onChange has to be added to call the function that'd be use to activate it

Events
  Use onClick to add events

useEffect hook
  it allows components to have side effects
  it works by taking in a function and a dependecy array
    useEffect(() => [])
  it runs everytime the dependecy changes i.e the array []
  Have an empty array to prevent a never ending loop
  the hook will continue to run without a dependecy array
